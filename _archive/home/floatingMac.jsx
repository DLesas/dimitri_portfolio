"use client";
import * as THREE from "three";
import React, { Suspense, useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { Html, Environment, useGLTF, ContactShadows, OrbitControls, Mask } from "@react-three/drei";
import InstagramPost from "./instagram";
import { SpiralScene } from "./3DSpiral";

function Model(props) {
	const group = useRef();
	// Load model
	const { nodes, materials } = useGLTF("models/mac_draco.glb");
	// Make it float
	useFrame((state) => {
		const t = state.clock.getElapsedTime();
		group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1);
		group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1);
		group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1);
		group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-2 + Math.sin(t / 2)) / 2, 0.1);
	});
	// The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
	return (
		<group ref={group} {...props} dispose={null}>
			<group rotation-x={-0.425} position={[0, -0.04, 0.41]}>
				<group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
					<mesh geometry={nodes["Cube008"].geometry} />
					<mesh material={materials["matte.001"]} geometry={nodes["Cube008_1"].geometry} />
					<Mask
						id={1}
						colorWrite={false}
						depthWrite={false}
						geometry={nodes["Cube008_2"].geometry}
						position={[-0.5, 0, -0.1]}
						rotation-x={-Math.PI / 2}
						renderOrder={1}
						castShadow={false}
						receiveShadow={true}
					>
						<Html
							className="w-[334px] h-[216px] bg-transparent p-0 text-black"
							transform
							occlude={"blending"}
							distanceFactor={10}
						>
							<InstagramPost />
						</Html>
					</Mask>
				</group>
			</group>
			<mesh material={materials.keys} geometry={nodes.keyboard.geometry} position={[1.79, 0, 3.45]} />
			<group position={[0, -0.1, 3.39]}>
				<mesh material={materials.aluminium} geometry={nodes["Cube002"].geometry} />
				<mesh material={materials.trackpad} geometry={nodes["Cube002_1"].geometry} />
			</group>
			<mesh material={materials.touchbar} geometry={nodes.touchbar.geometry} position={[0, -0.03, 1.2]} />
			<group position={[-3.8, 1.9, 0]}>
				<SpiralScene emojiCount={10} initialY={0} raycast={undefined} />
			</group>
		</group>
	);
}

export default function App() {
	return (
		<Canvas shadows camera={{ near: 0.1, position: [-15, 0, -15], fov: 45 }}>
			<pointLight color="red" position={[-15, 0, -15]} intensity={0.1} />
			<Suspense fallback={null}>
				<group rotation={[0, Math.PI, 0]} position={[0, 1, 0]}>
					<Model />
				</group>
				<Environment preset="city" />
			</Suspense>
			<ContactShadows position={[0, -4.5, 0]} scale={20} blur={2} far={4.5} />
			<OrbitControls
				enablePan={false}
				enableZoom={false}
				minPolarAngle={Math.PI / 2.2}
				maxPolarAngle={Math.PI / 2.2}
			/>
		</Canvas>
	);
}
